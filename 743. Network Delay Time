from collections import defaultdict

class Solution:
    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:
        
        graph = defaultdict(list)
        
        # origin, destination, time
        for u, v, w in times:
            graph[u].append((v, w))
            
        dist = defaultdict(list)
        queue = [[0, k]]
        
        while queue:
            time, node = heapq.heappop(queue)
            if node not in dist:
                dist[node] = time
                for v, w in graph[node]:
                    new_time = time + w
                    heapq.heappush(queue, (new_time, v))
        
        if len(dist) == n:
            return max(dist.values())
        
        return -1