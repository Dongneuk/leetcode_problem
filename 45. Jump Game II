class Solution(object):
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        jumps = 0
        cur_coverage, last_jump_index = 0, 0
        destination = len(nums) - 1
        
        
        if len(nums) == 1:
            return 0
        
        for i in range(len(nums)):
            
            cur_coverage = max(cur_coverage, i+nums[i])
            
            if i == last_jump_index:
                
                last_jump_index = cur_coverage
                jumps += 1
                
                if cur_coverage >= destination:
                    return jumps
                
## Greedy, Dynamic Programming
## TC:O(N).
                
                
                
                
                
            
                
                
                
            
            
            
            
            
            
        