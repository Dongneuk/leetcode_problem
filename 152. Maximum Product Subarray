class Solution(object):
    def maxProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        max_product = nums[0]
        min_product = nums[0]
        answer = nums[0]
        
        
        for i in range(1, len(nums)):
            x = max(nums[i], max_product * nums[i], min_product * nums[i])
            y = min(nums[i], max_product * nums[i], min_product * nums[i])
            
            max_product, min_product = x, y
            answer = max(max_product, answer)
        
        return answer



## max, min을 모두 구함으로써 current element가 음수일때 지금까지의 min_product를 곱하면 최댓값을 얻을수도 있다.
## time complexity: O(N)
## Array, Dynamic Programming
        
        